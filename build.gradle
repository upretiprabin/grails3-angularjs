buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.6.4"
        classpath "gradle.plugin.com.craigburke.gradle:client-dependencies:1.0.0-RC2"
        classpath "org.grails.plugins:hibernate4:5.0.2"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0"
        classpath "com.bertramlabs.plugins:less-asset-pipeline:2.7.0"
        classpath "org.grails.plugins:views-gradle:1.0.4"
    }
}

version "0.1"
group "automation"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.craigburke.client-dependencies"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
//    maven { url "http://10.0.134.248:8081/artifactory/simple/Local-Internal-Repository"}
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:views-json"
    compile('com.sun.jersey:jersey-client:1.19')
    compile('com.sun.jersey:jersey-core:1.19')
    compile('com.sun.jersey:jersey-json:1.19')

    compile 'org.apache.httpcomponents:httpcore:4.4.4'
    compile 'org.apache.httpcomponents:httpclient:4.5.1'
    compile 'org.apache.httpcomponents:httpmime:4.5.1'

//    compile 'org.grails.plugins:audit-logging:2.0.4'

    compile 'joda-time:joda-time:2.9.7'

    profile "org.grails.profiles:angular"
    runtime 'mysql:mysql-connector-java:5.1.38'
    runtime "com.bertramlabs.plugins:less-asset-pipeline:2.7.0"
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.2.6"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
//    compile "deerwalk:cas-proxy-client:1.2.6"
    compile "com.google.code.gson:gson:2.8.1"
    profile "org.grails.profiles:web:3.1.6"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

clientDependencies {
    installDir = 'grails-app/assets/vendor/npm'
    fileExtensions = ['css', 'js','otf','eot','ttf','woff','woff2']
    useGlobalCache = true

    npm {
        'angular'('1.5.x', into: 'angular'){
            include 'angular.js'
        }
        'angular-resource'('1.5.x', into: 'angular') {
            include 'angular-resource.js'
        }
        'angular-animate'('1.5.x', into: 'angular') {
            include 'angular-animate.js'
        }
        'angular-sanitize'('1.5.x', into: 'angular') {
            include 'angular-sanitize.js'
        }
        'angular-messages'('1.5.x', into: 'angular') {
            include 'angular-messages.js'
        }
        'angular-aria'('1.5.x', into: 'angular') {
            include 'angular-aria.js'
        }
        'angular-ui-bootstrap'('1.x.x', into: 'angular') {
            include 'ui-bootstrap-tpls.js'
        }
        'angular-ui-router'('0.2.15', into: 'angular') {
            include 'angular-ui-router.js'
        }
        'bootstrap'('3.3.6', into: 'bootstrap'){
            include 'css/bootstrap.css'
            eachFile { it.path -= 'css/' }
            include 'js/bootstrap.js'
            eachFile { it.path -= 'js/' }
        }
        'moment'('2.10.6', into: 'moment') {
            include 'moment.js'
        }
        'moment-timezone'('0.5.3', into: 'moment'){
            include 'moment-timezone.js'
        }
        'angular-moment'('1.0.1', into: 'moment')
        'animate.css'('3.4.x', into: 'animate.css')
        'metismenu'('2.6.3', into: 'metismenu')
        'font-awesome'('4.x.x', into: 'fontawesome') {
            include 'css/font-awesome.css'
            include 'fonts/'
        }
        'jquery'('2.1.4', into: 'jquery')
        'angular-ui-sortable'('0.14.3', into: 'ui-sortable')

        'angular-toastr'('2.1.0', into:'angular-toastr'){
            include 'angular-toastr.css'
            include 'angular-toastr.tpls.js'
        }
        'jasny-bootstrap'('3.1.3', into:'jasny'){
            include 'css/jasny-bootstrap.css'
            include 'js/jasny-bootstrap.js'
        }
        'angular-cookies'('1.5.x', into: 'angular') {
            include 'angular-cookies.js'
            include 'angular-cookies.min.js'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}
